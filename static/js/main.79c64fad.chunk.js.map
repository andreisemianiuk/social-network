{"version":3,"sources":["Components/Content/Dialogs/DialogsMember/DialogsMember.module.css","Components/Content/Profile/Posts/Posts.module.css","Components/Header/Header.module.css","Components/Content/Profile/Profile.module.css","Components/Content/Dialogs/DialogsPage.module.css","Components/Content/Content.module.css","Components/Sidebar/Sidebar.module.css","utilities/keyCreator.ts","images/template/avatar.ts","Components/Sidebar/Sidebar.tsx","Components/Header/Header.tsx","images/template/pogonya.ts","Components/Content/Profile/Posts/Post/Post.tsx","redux/reducers/dialog-reducer.ts","redux/state.ts","redux/reducers/profile-reducer.ts","Components/Content/Profile/Posts/Posts.tsx","Components/Content/Profile/ProfilePage.tsx","images/template/image.ts","Components/Content/Dialogs/DialogsMember/DialogsSender.tsx","Components/Content/Dialogs/DialogsMember/DialogsMember.tsx","Components/Content/Dialogs/DialogsPage.tsx","Components/Content/Friends/FriendsPage.tsx","Components/Content/Content.tsx","App.tsx","index.tsx","Components/Content/Profile/Posts/Post/Post.module.css"],"names":["module","exports","generateKey","pre","Date","getTime","Avatar","Sidebar","props","className","styles","nav","link","to","activeClassName","active","friends","friendsWrapper","map","v","friend","img","src","alt","name","Header","header","logo","Post","message","likes","dislikes","post","desk","changeDialogTextAC","text","type","CHANGE_DIALOG_TEXT","newText","ADD_POST","CHANGE_POST_TEXT","SEND_DIALOG_MESSAGE","store","_state","dialogsPage","newDialogText","dialogs","id","v1","messages","profilePage","newPostText","posts","sidebar","_getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","action","profileReducer","state","find","i","push","dialogReducer","newPost","Math","floor","random","addPostAC","changePostTextAC","Posts","useState","error","setError","wrapper","value","onChange","e","currentTarget","onKeyPress","key","shiftKey","preventDefault","textarea","btn","onClick","ProfilePage","container","image","DialogsSender","setValue","newValue","sendMessageBtn","DialogsMember","collapsed","setCollapsed","m","DialogsPage","members","FriendsPage","Content","content","path","render","App","rerenderEntireTree","ReactDOM","bind","document","getElementById"],"mappings":"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","file":"static/js/main.79c64fad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogsMember_container__3bGLa\",\"active\":\"DialogsMember_active__1oak8\",\"sendIcon\":\"DialogsMember_sendIcon__3Q2S4\",\"sendMessageBtn\":\"DialogsMember_sendMessageBtn__tjJnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__18WPk\",\"textarea\":\"Posts_textarea__FkgS4\",\"error\":\"Posts_error__2I3I9\",\"btn\":\"Posts_btn__2MIt5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__mZppd\",\"img\":\"Header_img__3InKy\",\"logo\":\"Header_logo__2A24t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1YcLA\",\"image\":\"Profile_image__3LJ4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogsPage_container__6o8sK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__35dJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__1efGX\",\"link\":\"Sidebar_link__1sn_N\",\"friends\":\"Sidebar_friends__slXCW\",\"active\":\"Sidebar_active__b65kt\",\"friendsWrapper\":\"Sidebar_friendsWrapper__2rEfX\",\"friend\":\"Sidebar_friend__17mIv\",\"img\":\"Sidebar_img__1g1_2\",\"name\":\"Sidebar_name__1Fdd_\"};","export const generateKey = (pre: any) => {\r\n  return `${ pre }_${ new Date().getTime() }`;\r\n}","export const Avatar: string = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHE4vcD6O1-GAxEU2CDLEQlD140pQI94q5qA&usqp=CAU'","import React from 'react'\r\nimport styles from './Sidebar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { generateKey } from '../../utilities/keyCreator'\r\nimport { Avatar } from '../../images/template/avatar'\r\n\r\ntype SidebarType = {\r\n  friends: string[]\r\n}\r\n\r\nconst Sidebar = (props: SidebarType) => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.link}>\r\n        <NavLink to='/profile' activeClassName={styles.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={styles.link}>\r\n        <NavLink to='/dialogs' activeClassName={styles.active}>Dialogs</NavLink>\r\n      </div>\r\n      <div className={`${styles.link} ${styles.friends}`}>\r\n        <NavLink to='/friends' activeClassName={styles.active}>Friends</NavLink>\r\n      </div>\r\n      <div className={styles.friendsWrapper}>\r\n        {props.friends.map(v => (<div className={styles.friend} key={generateKey(v)}>\r\n          <img className={styles.img} src={Avatar} alt='ava'/>\r\n          <div className={styles.name}>{v}</div>\r\n        </div>))}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport { Pogonya } from '../../images/template/pogonya'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <NavLink to='/profile'>\r\n        <img className={styles.img} src={Pogonya} alt='pogonya'/>\r\n      </NavLink>\r\n      <div className={styles.logo}>This is my Social Network</div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","export const Pogonya: string = 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Pahonia_-_%D0%9F%D0%B0%D0%B3%D0%BE%D0%BD%D1%8F%2C_Grand_Duchy_of_Lithuania_COA_%281575%29_cut.png/200px-Pahonia_-_%D0%9F%D0%B0%D0%B3%D0%BE%D0%BD%D1%8F%2C_Grand_Duchy_of_Lithuania_COA_%281575%29_cut.png'","import React from 'react'\r\nimport styles from './Post.module.css'\r\nimport { Avatar } from '../../../../../images/template/avatar'\r\nimport { PostType } from '../../../../../redux/state'\r\n\r\n\r\nexport const Post: React.FC<PostType> = ({name, message, likes, dislikes}) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles.desk}>\r\n        <img className={styles.img} src={Avatar} alt='avatar'/>\r\n        <div>{name}</div>\r\n      </div>\r\n      <div className={styles.message}>{message}</div>\r\n      <div className={styles.likes}>\r\n        <span>Likes: {likes}</span>\r\n        <span>Dislikes: {dislikes}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ActionTypes, CHANGE_DIALOG_TEXT, DialogsPageType, SEND_DIALOG_MESSAGE } from '../state'\r\n\r\nexport const dialogReducer = (state: DialogsPageType, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case SEND_DIALOG_MESSAGE:\r\n      const friend = state.dialogs.find(i => i.id === action.id)\r\n      if (friend) {\r\n        friend.messages.push(action.newText)\r\n      }\r\n      return state\r\n    case CHANGE_DIALOG_TEXT:\r\n      return {\r\n        ...state,\r\n        newDialogText: action.newText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const changeDialogTextAC = (text: string) => {\r\n  return {\r\n    type: CHANGE_DIALOG_TEXT,\r\n    newText: text,\r\n  } as const\r\n}\r\n\r\nexport const sendDialogMessageAC = (text: string, id: string) => {\r\n  return {\r\n    type: SEND_DIALOG_MESSAGE,\r\n    newText: text,\r\n    id: id,\r\n  } as const\r\n}","import { v1 } from 'uuid'\r\nimport { addPostAC, changePostTextAC, profileReducer } from './reducers/profile-reducer'\r\nimport { changeDialogTextAC,  dialogReducer, sendDialogMessageAC } from './reducers/dialog-reducer'\r\n\r\nexport type DialogsType = {\r\n  id: string\r\n  name: string\r\n  messages: string[]\r\n}\r\n\r\nexport type DialogsPageType = {\r\n  newDialogText: string\r\n  dialogs: DialogsType[]\r\n}\r\n\r\nexport type ProfilePageType = {\r\n  newPostText: string\r\n  posts: PostType[]\r\n}\r\n\r\nexport type PostType = {\r\n  id: string\r\n  name: string\r\n  message: string\r\n  likes: number\r\n  dislikes: number\r\n}\r\n\r\nexport type StateType = {\r\n  dialogsPage: DialogsPageType\r\n  profilePage: ProfilePageType\r\n  sidebar: string[]\r\n}\r\n\r\nexport type ActionTypes = ReturnType<typeof addPostAC> | ReturnType<typeof changePostTextAC>\r\n  | ReturnType<typeof changeDialogTextAC> | ReturnType<typeof sendDialogMessageAC>\r\n\r\nexport type StoreType = {\r\n  _state: StateType\r\n  _getState: () => StateType\r\n  _callSubscriber: () => void\r\n  subscribe: (observer: () => void) => void\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const CHANGE_POST_TEXT = 'CHANGE_POST_TEXT'\r\n\r\nexport const SEND_DIALOG_MESSAGE = 'SEND_DIALOG_MESSAGE'\r\nexport const CHANGE_DIALOG_TEXT = 'CHANGE_DIALOG_TEXT'\r\n\r\n\r\nlet store: StoreType = {\r\n  _state: {\r\n    dialogsPage: {\r\n      newDialogText: '',\r\n      dialogs: [\r\n        {\r\n          id: v1(),\r\n          name: 'Andrey',\r\n          messages: ['hello', 'hey', 'bye'],\r\n        },\r\n        {\r\n          id: v1(),\r\n          name: 'Vika',\r\n          messages: ['how are you?', 'ok'],\r\n        },\r\n        {\r\n          id: v1(),\r\n          name: 'Gosha',\r\n          messages: ['what\\'s up'],\r\n        },\r\n      ],\r\n    }\r\n    ,\r\n    profilePage: {\r\n      newPostText: '',\r\n      posts: [\r\n        {id: v1(), name: 'Andrey', message: 'hello', likes: 20, dislikes: 10},\r\n        {id: v1(), name: 'Vera', message: 'hello1', likes: 10, dislikes: 12},\r\n        {id: v1(), name: 'Lesha', message: 'hello2', likes: 20, dislikes: 20},\r\n      ],\r\n    },\r\n    sidebar: ['Sveta', 'Kolya', 'Vasya'],\r\n  },\r\n  _getState() {\r\n    return this._state\r\n  },\r\n  _callSubscriber() {\r\n    console.log('state had changed')\r\n  },\r\n  subscribe(observer: () => void) {\r\n    this._callSubscriber = observer\r\n  },\r\n  dispatch(action) {\r\n    this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n    this._state.dialogsPage = dialogReducer(this._state.dialogsPage, action)\r\n    this._callSubscriber()\r\n  },\r\n}\r\n\r\nexport default store","import { v1 } from 'uuid'\r\nimport { ActionTypes, ADD_POST, CHANGE_POST_TEXT, ProfilePageType } from '../state'\r\n\r\nexport const profileReducer = (state: ProfilePageType, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: v1(),\r\n        name: 'Somebody',\r\n        message: state.newPostText,\r\n        likes: Math.floor(Math.random() * 100),\r\n        dislikes: Math.floor(Math.random() * 100),\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: '',\r\n      }\r\n    case CHANGE_POST_TEXT:\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n  return {\r\n    type: ADD_POST,\r\n  } as const\r\n}\r\n\r\nexport const changePostTextAC = (text: string) => {\r\n  return {\r\n    type: CHANGE_POST_TEXT,\r\n    newText: text,\r\n  } as const\r\n}","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\r\nimport styles from './Posts.module.css'\r\nimport { Post } from './Post/Post'\r\nimport { ActionTypes, PostType } from '../../../../redux/state'\r\nimport { generateKey } from '../../../../utilities/keyCreator'\r\nimport { addPostAC, changePostTextAC } from '../../../../redux/reducers/profile-reducer'\r\n\r\ntype PostsPropsType = {\r\n  posts: PostType[]\r\n  message: string\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport const Posts = ({posts,message,dispatch}: PostsPropsType) => {\r\n\r\n  let [error, setError] = useState<string>('')\r\n  \r\n  const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>)  => {\r\n    const value = e.currentTarget.value\r\n    if (value) {\r\n      setError('')\r\n    }\r\n    dispatch(changePostTextAC(value))\r\n  }\r\n  const addPostHandler = () => {\r\n    if (message) {\r\n      dispatch(addPostAC())\r\n      dispatch(changePostTextAC(''))\r\n    } else {\r\n      setError('Required text')\r\n    }\r\n  }\r\n  const onKeyPressHandler =(e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault()\r\n      if (message) {\r\n        dispatch(addPostAC())\r\n        dispatch(changePostTextAC(''))\r\n      } else {\r\n        setError('Required text')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1>My Posts</h1>\r\n      <div>\r\n        <textarea\r\n          value={message}\r\n          onChange={onChangeHandler}\r\n          onKeyPress={onKeyPressHandler}\r\n          className={styles.textarea}\r\n        />\r\n        {error && <div className={styles.error}>{error}</div>}\r\n      </div>\r\n      <div>\r\n        <button\r\n          className={styles.btn}\r\n          onClick={addPostHandler}\r\n        >\r\n          Add Post\r\n        </button>\r\n      </div>\r\n      {posts.map(v => (\r\n        <Post key={generateKey(v.id)}\r\n              id={v.id}\r\n              name={v.name}\r\n              message={v.message}\r\n              dislikes={v.dislikes}\r\n              likes={v.likes}\r\n        />))}\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { imgUrl } from '../../../images/template/image'\r\nimport { Posts } from './Posts/Posts'\r\nimport styles from './Profile.module.css'\r\nimport { ActionTypes, PostType } from '../../../redux/state'\r\n\r\ntype ProfilePagePropsType = {\r\n  posts: PostType[]\r\n  message: string\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport const ProfilePage = (props: ProfilePagePropsType) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <img className={styles.image} src={imgUrl} alt='content'/>\r\n      <Posts posts={props.posts} message={props.message} dispatch={props.dispatch}/>\r\n    </div>\r\n  )\r\n}","export const imgUrl: string = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRKMz56oWkccv5EZrUvir0IqZUqHVeYty6pDQ&usqp=CAU'","import React, { ChangeEvent, useState } from 'react'\r\nimport { changeDialogTextAC, sendDialogMessageAC } from '../../../../redux/reducers/dialog-reducer'\r\nimport { ActionTypes } from '../../../../redux/state'\r\nimport styles from './DialogsMember.module.css'\r\n\r\ntype DialogsSenderType = {\r\n  id: string\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport const DialogsSender = (props: DialogsSenderType) => {\r\n  const [value, setValue] = useState<string>('')\r\n  \r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    let newValue = e.currentTarget.value\r\n    setValue(newValue)\r\n    props.dispatch(changeDialogTextAC(newValue))\r\n  }\r\n  const sendMessage = () => {debugger\r\n    props.dispatch(sendDialogMessageAC(value,props.id))\r\n    setValue('')\r\n    props.dispatch(changeDialogTextAC(value))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <textarea value={value} onChange={onChange}/>\r\n      <div>\r\n        <button className={styles.sendMessageBtn} onClick={sendMessage}>Send message</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './DialogsMember.module.css'\r\nimport { DialogsSender } from './DialogsSender'\r\nimport { ActionTypes } from '../../../../redux/state'\r\n\r\ntype DialogsMemberType = {\r\n  id: string\r\n  name: string\r\n  messages: string[]\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport const DialogsMember: React.FC<DialogsMemberType> = (props) => {\r\n  const [collapsed, setCollapsed] = useState<boolean>(true)\r\n\r\n  const callback = () => {\r\n    setCollapsed(!collapsed)\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      <NavLink activeClassName={styles.active} onClick={callback} to={`/dialogs/${props.id}`}>\r\n        <div>{props.name}</div>\r\n      </NavLink>\r\n      \r\n      {!collapsed &&\r\n        <div>\r\n          {props.messages.map(m => <div>{m}</div>)}\r\n          <DialogsSender id={props.id} dispatch={props.dispatch}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport styles from './DialogsPage.module.css'\r\nimport { DialogsMember } from './DialogsMember/DialogsMember'\r\nimport { ActionTypes, DialogsType } from '../../../redux/state'\r\n\r\ntype DialogsPagePropsType = {\r\n  dialogs: DialogsType[]\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport const DialogsPage = (props: DialogsPagePropsType) => {\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.members}>\r\n        {props.dialogs.map(v => (<DialogsMember key={v.id}\r\n                                                name={v.name}\r\n                                                id={v.id}\r\n                                                messages={v.messages}\r\n                                                dispatch={props.dispatch}/>))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const FriendsPage = () => {\r\n  return (\r\n    <div>\r\n      FriendsPage\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport styles from './Content.module.css'\r\nimport { Route } from 'react-router-dom'\r\nimport { ProfilePage } from './Profile/ProfilePage'\r\nimport { DialogsPage } from './Dialogs/DialogsPage'\r\nimport { FriendsPage } from './Friends/FriendsPage'\r\nimport { AppPropsType } from '../../App'\r\n\r\nconst Content = (props: AppPropsType) => {\r\n  return (\r\n    <div className={styles.content}>\r\n      <Route path='/profile'\r\n             render={() => <ProfilePage posts={props.state.profilePage.posts}\r\n                                        message={props.state.profilePage.newPostText}\r\n                                        dispatch={props.dispatch}/>\r\n             }\r\n      />\r\n      <Route path='/dialogs'\r\n             render={() => <DialogsPage dialogs={props.state.dialogsPage.dialogs}\r\n                                        dispatch={props.dispatch} />\r\n             }/>\r\n      <Route path='/friends' render={() => <FriendsPage/>}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\nimport './App.css'\r\nimport Sidebar from './Components/Sidebar/Sidebar'\r\nimport Header from './Components/Header/Header'\r\nimport Content from './Components/Content/Content'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { ActionTypes, StateType } from './redux/state'\r\n\r\nexport type AppPropsType = {\r\n  state: StateType\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nfunction App(props: AppPropsType) {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='container'>\r\n        <Header/>\r\n        <Sidebar friends={props.state.sidebar}/>\r\n        <Content state={props.state} dispatch={props.dispatch} />\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport store from './redux/state'\r\n\r\nexport const rerenderEntireTree = () => {\r\n  ReactDOM.render(\r\n    <App\r\n      state={store._getState()}\r\n      dispatch={store.dispatch.bind(store)}\r\n    />,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nrerenderEntireTree()\r\n\r\nstore.subscribe(rerenderEntireTree)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__yOUgf\",\"desk\":\"Post_desk__3GPcX\",\"img\":\"Post_img__qsXPl\",\"message\":\"Post_message__2stNB\",\"likes\":\"Post_likes__jX3D8\"};"],"sourceRoot":""}